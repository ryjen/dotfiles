# Local/private config goes in the include
[include]
	path = ~/.config/git/includes.conf

[core]
  excludesfile = ~/.gitignore

[alias]
  wip = !git add --all; git ci -m WIP
  co = checkout
  cob = checkout -b
  last = log -1 HEAD
  st = status
  save = commit -a
  wtc = !curl -s whatthecommit.com/index.txt
  coji = !gitmoji
  aliases = config --get-regex alias
  loga = log --pretty=format:'%C(yellow)%h %<(24)%C(red)%ad %<(18)%C(green)%an %C(reset)%s' --date=local --max-count=10
  undo = reset HEAD~1 --mixed
  correct = reset --hard
  uncommit = reset --soft HEAD~
  done = push origin HEAD
  unstage = reset HEAD --
  lg = log --graph --abbrev-commit --decorate --date=relative --all
  del = branch -D
  br = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
	cleanup-merged = "!f(){ git fetch && git branch --merged | grep -v '* ' | xargs git branch --delete; };f"
	workon = "!f(){ git fetch && git checkout -b \"$1\" $(git symbolic-ref refs/remotes/origin/HEAD | sed \"s@^refs/remotes/@@\"); };f"
	changelog = log origin..HEAD --format='* %s%n%w(,4,4)%+b'
	amend = commit --amend --reuse-message=HEAD
	glg = log --oneline --decorate --all --graph
	refresh = "!f(){ git fetch && git stash && git rebase $(git symbolic-ref refs/remotes/origin/HEAD | sed \"s@^refs/remotes/@@\") && git stash pop; };f"

[credential]
  helper = cache --timeout=3600

[difftool]
  prompt = false

[gui]
  # Remove `git gui` pop-up warning
  gcwarning = false

[help]
  autocorrect = 1

[mergetool]
  keepBackup = false
	prompt = false

[pull]
  rebase = true

[push]
  default = simple

[rebase]
  autoStash = true

[user]
  useConfigOnly = true

[init]
  defaultBranch = main
  templateDir = ~/.config/git/project

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
  required = true

[sendemail]
  annotate = yes

[commit]
  template = ~/.config/git/commit-message
