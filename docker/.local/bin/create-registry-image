#!/usr/bin/env bash

BUILD_ARGS=""

IMAGE_TAG="latest"

REGISTRY="registry.gitlab.com"

while [[ $1 == -* ]]; do
	case "$1" in
	-f | --file)
		shift
		DOCKER_FILE=$1
		shift
		;;
	-p | --push)
		shift
		PUSH=1
		;;
	-r | --registry)
		shift
		REGISTRY=$1
		shift
		;;
	-v | --version)
		shift
		IMAGE_TAG=$1
		shift
		;;
	--ssh-key)
		shift
		SSH_KEY=$(cat $1)
		BUILD_ARGS="${BUILD_ARGS} --build-arg SSH_KEY"
		shift
		;;
	esac
done

DOCKER_FILE=${DOCKER_FILE:-Dockerfile}
IMAGE_SLUG="$1"

shift

WORKING_DIR=${1:-.}

function syntax() {
	echo "Syntax: $(basename $0) [<options>] <slug> [working dir]"
	echo ""
	echo "Options:"
	echo ""
	echo "  -v, --version     <tag>      the version tag to use"
	echo "  -f, --file        <file>     the docker file relative to the working dir (defaults to 'Dockerfile')"
	echo "  -r, --registry    <domain>   the remote registry base url."
	echo "  -p, --push                   push to registry"
	echo ""
}

if [ -z "${IMAGE_SLUG}" ]; then
	syntax
	exit 1
fi

if [ -n "$PUSH" ] || [ -n "$REGISTRY" ]; then
	REMOTE_SLUG="${REGISTRY}/${IMAGE_SLUG}"
fi

echo "Building ${IMAGE_SLUG} with ${DOCKER_FILE} in ${WORKING_DIR}"

docker build -t ${IMAGE_SLUG}:${IMAGE_TAG} -f ${DOCKER_FILE} ${BUILD_ARGS} ${WORKING_DIR}

if [ "$IMAGE_TAG" != "latest" ]; then
	docker tag "${IMAGE_SLUG}:${IMAGE_TAG}" "${IMAGE_SLUG}:latest"
fi

if [ ! -z "${REMOTE_SLUG}" ]; then
	docker tag "${IMAGE_SLUG}:${IMAGE_TAG}" "${REMOTE_SLUG}:${IMAGE_TAG}"
	if [ "$IMAGE_TAG" != "latest" ]; then
		docker tag "${REMOTE_SLUG}:${IMAGE_TAG}" "${REMOTE_SLUG}:latest"
	fi
	if [ -n "$PUSH" ]; then
		docker push "${REMOTE_SLUG}:${IMAGE_TAG}"
		if [ "$IMAGE_TAG" != "latest" ]; then
			docker push "${REMOTE_SLUG}:latest"
		fi
	fi
fi
