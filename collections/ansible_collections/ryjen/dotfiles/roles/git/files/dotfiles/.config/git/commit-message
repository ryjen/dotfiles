<type>[optional scope]: <description>

[optional body]

[optional footer(s)]
# Conventional Commits Standard
# https://www.conventionalcommits.org/en/v1.0.0/#summary
#
# Type: fix, feat, build, chore, ci, docs, style, refactor, perf, test
#       append ! for breaking change
#       scope context can be provided in parenthesis eg: feat(parser)
#
# Footer: BREAKING CHANGE, Reviewed-by, Refs, Links, Co-authored-by, Tags
#         Time, Points
#
# Description:
#
# Why is this change happening, e.g. goals, use cases, stories, etc.?
#
# How is this change happening, e.g. implementations, algorithms, etc.?
#
# ## Help ##
#
# Subject line imperative uppercase verbs:
#
#   Add = Create a capability e.g. feature, test, dependency.
#   Drop = Delete a capability e.g. feature, test, dependency.
#   Fix = Fix an issue e.g. bug, typo, accident, misstatement.
#   Bump = Increase the version of something e.g. a dependency.
#   Make = Change the build process, or tools, or infrastructure.
#   Start = Begin doing something; e.g. enable a toggle, feature flag, etc.
#   Stop = End doing something; e.g. disable a toggle, feature flag, etc.
#   Optimize = A change that MUST be just about performance, e.g. speed up code.
#   Document = A change that MUST be only in the documentation, e.g. help files.
#   Refactor = A change that MUST be just refactoring.
#   Reformat = A change that MUST be just format, e.g. indent line, trim space, etc.
#   Rephrase = A change that MUST be just textual, e.g. edit a comment, doc, etc.
#
# For the subject line:
#   * Use 50 characters maximum.
#   * Do not use a sentence-ending period.
#
# For the body text:
#   * Use as many lines as you like.
#   * Use 72 characters maximum per line for typical word wrap text.
#
